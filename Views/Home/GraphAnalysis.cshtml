@model StringAnalyzer.Models.StringStatistics
@using StringAnalyzer.Services


<html>

	<head>
		<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
	</head>

	<body>
        <h4>Results</h4>
        <br/>
<div>
          <!--- <h4>Lenght of words</h4>--> 
  <canvas id="wordLenght"></canvas>
        <!--     <h4>Letters words start with</h4> --> 
   <canvas id="alphabetCount"></canvas>
</div>
 
<script>
	var backgroundColours = [
      'rgba(255, 99, 132, 0.6)',
      'rgba(255, 159, 64, 0.6)',
      'rgba(255, 205, 86, 0.6)',
      'rgba(75, 192, 192, 0.6)',
      'rgba(54, 162, 235, 0.6)',
      'rgba(153, 102, 255, 0.6',
      'rgba(201, 203, 207, 0.6)'
    ];
    var borderColours = [
      'rgb(255, 99, 132)',
      'rgb(255, 159, 64)',
      'rgb(255, 205, 86)',
      'rgb(75, 192, 192)',
      'rgb(54, 162, 235)',
      'rgb(153, 102, 255)',
      'rgb(201, 203, 207)'
    ];

	var words = @Html.Raw(Json.Serialize(@Model.Alpabetize()));
	var wordsLenght = @Html.Raw(Json.Serialize(CustomizeArray.StringArrayToIntArray(@Model.Alpabetize())));
    
   
  const dataLenght = {
    labels: words,
    datasets: [{
      label: 'Words lenght analysis',
      backgroundColor: backgroundColours[3],
      borderColor: borderColours[3],
      data: wordsLenght,
      tension: 0.1
    }]
  };

  const configLenght = {
    type: 'line',
    data: dataLenght,
    options: {
	scales: {
            y: {
                beginAtZero: true
            }
        }}
  };

  var firstLetters = @Html.Raw(Json.Serialize(@Model.WordsByFirstLetters().Keys));
  var occurencies = @Html.Raw(Json.Serialize(@Model.WordsByFirstLetters().Values));

  const dataAlphabet = {
    labels: firstLetters,
    datasets: [{
      label: 'Words alphabet analysis',
      backgroundColor: backgroundColours,
      borderColor: borderColours,
      data: occurencies,
      borderWidth: 1
    }]
  };

  const configAlphabet = {
    type: 'bar',
    data: dataAlphabet,
    options: {
	scales: {
            y: {
                beginAtZero: true
            }
        }}
  };
</script>

<script src="path/to/chartjs/dist/chart.js"></script>
<script>
  const wordLenght = new Chart(
    document.getElementById('wordLenght'),
    configLenght
  );
  const alphabetCount = new Chart(
    document.getElementById('alphabetCount'),
    configAlphabet
  );
</script>
 
	</body>

</html>